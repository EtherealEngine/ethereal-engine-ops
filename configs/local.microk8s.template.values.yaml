client:
  extraEnv:
    APP_LOGO: "./logo.svg"
    APP_TITLE: EtherealEngine
    APP_URL: https://local.etherealengine.org
    HOST_PORT: "3000"
    NODE_ENV: production
    SITE_DESC: Connected Worlds for Everyone
    SITE_TITLE: Ethereal Engine
    VITE_APP_HOST: local.etherealengine.org
    VITE_APP_PORT: "3000"
    VITE_FILE_SERVER: https://localhost:8642/etherealengine-microk8s-static-resources
    VITE_SERVER_HOST: api-local.etherealengine.org
    VITE_SERVER_PORT: "3030"
    VITE_INSTANCESERVER_HOST: instanceserver-local.etherealengine.org
    VITE_INSTANCESERVER_PORT: "3031"
  image:
    repository: localhost:32000/etherealengine
    pullPolicy: IfNotPresent
  ingress:
    annotations:
      kubernetes.io/ingress.class: public
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    hosts:
      - host: local.etherealengine.org
        paths:
          - /
  service:
    type: NodePort
domain: etherealengine.org
clusterType: microk8s
sql:
  database: etherealengine
  password: password
  user: server
  host: 10.0.1.1
  port: 3304
rts:
  extraEnv:
    NAF_LISTEN_PORT: "8081"
api:
  config:
    aws:
      keys:
        access_key_id: server
        secret_access_key: password
      s3:
        endpoint: https://10.0.1.1:9000
        static_resource_bucket: etherealengine-microk8s-static-resources
      sns:
        access_key_id: <SNS_USER_ACCESS_KEY>
        application_id: <SNS_APPLICATION_ID>
        region: <SNS_REGION>
        secret_access_key: <SNS_USER_SECRET_KEY>
        sender_id: <SNS_SENDER_ID>
    host: https://local.etherealengine.org/
  extraEnv:
    APP_HOST: local.etherealengine.org
    APP_URL: https://local.etherealengine.org
    AUTH_SECRET: <AUTH_SECRET_UUID_OR_SIMILAR>
    ELASTIC_HOST: "http://10.0.1.1:9200"
    AWS_SMS_ACCESS_KEY_ID: <SNS_USER_ACCESS_KEY>
    AWS_SMS_REGION: <SNS_REGION>
    AWS_SMS_SECRET_ACCESS_KEY: <SNS_USER_SECRET_KEY>
    AWS_SMS_TOPIC_ARN: arn:aws:sns:<SNS_REGION>:<AWS_ACCOUNT_ID>:<SNS_TOPIC_NAME>
    CERT: certs/cert.pem
    KEY: certs/key.pem
    CORS_SERVER_PORT: "3036"
    FACEBOOK_CALLBACK_URL: https://local.etherealengine.org/auth/oauth/facebook
    FACEBOOK_CLIENT_ID: "<FACEBOOK_CLIENT_ID>"
    FACEBOOK_CLIENT_SECRET: "<FACEBOOK_CLIENT_SECRET>"
    FORCE_DB_REFRESH: "false"
    INSTANCESERVER_DOMAIN: instanceserver-local.etherealengine.org
    GITHUB_CALLBACK_URL: https://local.etherealengine.org/auth/oauth/github
    GITHUB_CLIENT_ID: "<GITHUB_CLIENT_ID>"
    GITHUB_CLIENT_SECRET: "<GITHUB_CLIENT_SECRET>"
    GOOGLE_CALLBACK_URL: https://local.etherealengine.org/auth/oauth/google
    GOOGLE_CLIENT_ID: "<GOOGLE_CLIENT_ID>"
    GOOGLE_CLIENT_SECRET: "<GOOGLE_CLIENT_SECRET>"
    LOCAL: "true"
    MAGICLINK_EMAIL_SUBJECT: Login to Ethereal Engine
    MAIL_FROM: info@login.etherealengine.com
    SERVE_CLIENT_FROM_STORAGE_PROVIDER: "true"
    SERVER_HOST: "api-local.etherealengine.org"
    SERVER_MODE: "api"
    SERVER_PORT: "3030"
    SMTP_FROM_EMAIL: info@login.etherealengine.com
    SMTP_FROM_NAME: noreply
    SMTP_HOST: email-smtp.<SMTP_REGION>.amazonaws.com
    SMTP_PASS: <SMTP_PASSWORD>
    SMTP_PORT: "465"
    SMTP_SECURE: "true"
    SMTP_USER: <SMTP_USER_ID>
    STORAGE_PROVIDER: local
    STORAGE_PROVIDER_EXTERNAL_ENDPOINT: "https://10.0.1.1:8642"
    LOCAL_STORAGE_PROVIDER: "localhost:8642"
    LOCAL_STORAGE_PROVIDER_PORT: "8642"
    STORAGE_AWS_ACCESS_KEY_ID: "server" #<S3_USER_ACCESS_KEY>
    STORAGE_AWS_ACCESS_KEY_SECRET: "password" #<S3_USER_SECRET_KEY>
    STORAGE_S3_ENDPOINT: https://localhost:9000 #<S3_ENDPOINT>
    STORAGE_S3_REGION: <S3_REGION>
    STORAGE_S3_STATIC_RESOURCE_BUCKET: etherealengine-microk8s-static-resources #<S3_BUCKET_NAME>
    STORAGE_S3_DEV_MODE: local
    VITE_APP_HOST: local.etherealengine.org
    VITE_APP_PORT: "3000"
    VITE_FILE_SERVER: https://localhost:8642/etherealengine-microk8s-static-resources
    VITE_SERVER_HOST: api-local.etherealengine.org
    VITE_SERVER_PORT: "3030"
    VITE_INSTANCESERVER_HOST: instanceserver-local.etherealengine.org
    VITE_INSTANCESERVER_PORT: "3031"
    USE_IPFS: "true"
  image:
    repository: localhost:32000/etherealengine
    pullPolicy: IfNotPresent
  ingress:
    annotations:
      kubernetes.io/ingress.class: public
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/enable-cors: "false"
#      nginx.ingress.kubernetes.io/cors-allow-origin: https://local.etherealengine.org
      nginx.ingress.kubernetes.io/proxy-body-size: 256m
      nginx.ingress.kubernetes.io/affinity: cookie
      nginx.ingress.kubernetes.io/affinity-mode: persistent
      nginx.ingress.kubernetes.io/server-snippet: |
        location ~* /cors-proxy/(.*) {
          proxy_http_version 1.1;
          proxy_pass_request_headers on;
          proxy_hide_header Access-Control-Allow-Origin;
          proxy_ssl_session_reuse off;
          add_header Initial-Reverse "first";
          proxy_ssl_server_name on;
          add_header Access-Control-Allow-Origin $http_origin;
          proxy_intercept_errors on;
          error_page 301 302 307 = @handle_redirects;
          proxy_pass https://$1?$args;
        }

        location @handle_redirects {
          set $saved_redirect_location '$upstream_http_location';
          proxy_pass_request_headers on;
          add_header Redirect-Reverse "second";
          proxy_hide_header Access-Control-Allow-Origin;
          add_header Access-Control-Allow-Origin $http_origin;
          proxy_pass $saved_redirect_location;
        }
    hosts:
      - host: api-local.etherealengine.org
        paths:
          - /

  fileServer:
    # This is the path of file server upload folder in your host machine.
    # For microk8s it will be similar to '/home/<OS_USER_NAME>/<ENGINE_FOLDER>/packages/server/upload' 
    # or '<ENGINE_FULL_PATH>/packages/server/upload'
    hostUploadFolder: <FILE_SERVER_FOLDER>

  service:
    type: NodePort
    corsServerPort: 3036
  replicaCount: 1

media:
  enabled: false
  config:
    aws:
      keys:
        access_key_id: server
        secret_access_key: password
      s3:
        endpoint: https://10.0.1.1:8642
        static_resource_bucket: etherealengine-microk8s-static-resources
      sns:
        access_key_id: <SNS_USER_ACCESS_KEY>
        application_id: <SNS_APPLICATION_ID>
        region: <SNS_REGION>
        secret_access_key: <SNS_USER_SECRET_KEY>
        sender_id: <SNS_SENDER_ID>
    host: https://local.etherealengine.org/
  extraEnv:
    APP_HOST: local.etherealengine.org
    APP_URL: https://local.etherealengine.org
    AUTH_SECRET: <AUTH_SECRET_UUID_OR_SIMILAR>
    AWS_SMS_ACCESS_KEY_ID: <SNS_USER_ACCESS_KEY>
    AWS_SMS_REGION: <SNS_REGION>
    AWS_SMS_SECRET_ACCESS_KEY: <SNS_USER_SECRET_KEY>
    AWS_SMS_TOPIC_ARN: arn:aws:sns:<SNS_REGION>:<AWS_ACCOUNT_ID>:<SNS_TOPIC_NAME>
    CERT: certs/cert.pem
    KEY: certs/key.pem
    CORS_SERVER_PORT: "3036"
    FACEBOOK_CALLBACK_URL: https://local.etherealengine.org/auth/oauth/facebook
    FACEBOOK_CLIENT_ID: "<FACEBOOK_CLIENT_ID>"
    FACEBOOK_CLIENT_SECRET: "<FACEBOOK_CLIENT_SECRET>"
    FORCE_DB_REFRESH: "false"
    INSTANCESERVER_DOMAIN: instanceserver-local.etherealengine.org
    GITHUB_CALLBACK_URL: https://local.etherealengine.org/auth/oauth/github
    GITHUB_CLIENT_ID: "<GITHUB_CLIENT_ID>"
    GITHUB_CLIENT_SECRET: "<GITHUB_CLIENT_SECRET>"
    GOOGLE_CALLBACK_URL: https://local.etherealengine.org/auth/oauth/google
    GOOGLE_CLIENT_ID: "<GOOGLE_CLIENT_ID>"
    GOOGLE_CLIENT_SECRET: "<GOOGLE_CLIENT_SECRET>"
    LOCAL: "true"
    MAGICLINK_EMAIL_SUBJECT: Login to Ethereal Engine
    MAIL_FROM: info@login.etherealengine.com
    SERVER_HOST: "api-local.etherealengine.org"
    SERVER_PORT: "3030"
    SMTP_FROM_EMAIL: info@login.etherealengine.com
    SMTP_FROM_NAME: noreply
    SMTP_HOST: email-smtp.<SMTP_REGION>.amazonaws.com
    SMTP_PASS: <SMTP_PASSWORD>
    SMTP_PORT: "465"
    SMTP_SECURE: "true"
    SMTP_USER: <SMTP_USER_ID>
    STORAGE_PROVIDER: local
    STORAGE_PROVIDER_EXTERNAL_ENDPOINT: "https://10.0.1.1:8642"
    LOCAL_STORAGE_PROVIDER: "10.0.1.1:8642"
    STORAGE_AWS_ACCESS_KEY_ID: "server" #<S3_USER_ACCESS_KEY>
    STORAGE_AWS_ACCESS_KEY_SECRET: "password" #<S3_USER_SECRET_KEY>
    STORAGE_S3_ENDPOINT: https://10.0.1.1:9000 #<S3_ENDPOINT>
    STORAGE_S3_REGION: <S3_REGION>
    STORAGE_S3_STATIC_RESOURCE_BUCKET: etherealengine-microk8s-static-resources #<S3_BUCKET_NAME>
    STORAGE_S3_DEV_MODE: local
    VITE_FILE_SERVER: https://localhost:8642/etherealengine-microk8s-static-resources
  image:
    repository: localhost:32000/etherealengine
    pullPolicy: IfNotPresent
  ingress:
    annotations:
      kubernetes.io/ingress.class: public
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-origin: https://local.etherealengine.org
      nginx.ingress.kubernetes.io/proxy-body-size: 5m
      nginx.ingress.kubernetes.io/affinity: cookie
      nginx.ingress.kubernetes.io/affinity-mode: persistent
    hosts:
      - host: api-local.etherealengine.org
        paths:
          - /video
  service:
    type: NodePort

release:
  name: "local"

instanceserver:
  image:
    repository: localhost:32000/etherealengine
    pullPolicy: IfNotPresent
  extraEnv:
    APP_HOST: local.etherealengine.org
    AUTH_SECRET: <AUTH_SECRET_UUID_OR_SIMILAR>
    APP_URL: https://local.etherealengine.org
    CERT: certs/cert.pem
    KEY: certs/key.pem
    INSTANCESERVER_PORT: "3031"
    ROUTE53_ACCESS_KEY_ID: <ROUTE53_USER_ACCESS_KEY>
    ROUTE53_ACCESS_KEY_SECRET: <ROUTE53_USER_SECRET_KEY>
    ROUTE53_HOSTED_ZONE_ID: <ROUTE53_HOSTED_ZONE_ID>
    RTC_START_PORT: "40000"
    RTC_END_PORT: "40099"
    RTC_PORT_BLOCK_SIZE: "100"
    LOCAL: "true"
    INSTANCESERVER_DOMAIN: instanceserver-local.etherealengine.org
    INSTANCESERVER_MODE: "realtime"
    STORAGE_PROVIDER: local
    STORAGE_PROVIDER_EXTERNAL_ENDPOINT: "https://10.0.1.1:8642"
    LOCAL_STORAGE_PROVIDER: "10.0.1.1:8642"
    LOCAL_STORAGE_PROVIDER_PORT: "8642"
    NODE_TLS_REJECT_UNAUTHORIZED: "0"
    STORAGE_AWS_ACCESS_KEY_ID: "server" #<S3_USER_ACCESS_KEY>
    STORAGE_AWS_ACCESS_KEY_SECRET: "password" #<S3_USER_SECRET_KEY>
    STORAGE_S3_ENDPOINT: https://10.0.1.1:9000 #<S3_ENDPOINT>
    STORAGE_S3_REGION: <S3_REGION>
    STORAGE_S3_STATIC_RESOURCE_BUCKET: etherealengine-microk8s-static-resources #<S3_BUCKET_NAME>
    STORAGE_S3_DEV_MODE: local
    TS_NODE_IGNORE: (?:^|\/)node_modules\/(?!(@etherealengine))
    VITE_FILE_SERVER: https://localhost:8642/etherealengine-microk8s-static-resources
  ingress:
    disabled: false
    host: instanceserver-local.etherealengine.org
    annotations:
      kubernetes.io/ingress.class: public
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/enable-cors: "false"
      nginx.ingress.kubernetes.io/proxy-body-size: 256m
      nginx.ingress.kubernetes.io/affinity: cookie
      nginx.ingress.kubernetes.io/affinity-mode: persistent
      nginx.ingress.kubernetes.io/server-snippet: |
        location ~* /primus?$ {
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          proxy_pass http://$arg_address:$arg_port/primus?$args;
        }
  buffer:
    bufferSize: 2
    minReplicas: 2
    maxReplicas: 10

builder:
  extraEnv:
    NODE_ENV: production
    RELEASE_NAME: <RELEASE_NAME>
    AWS_ACCESS_KEY: <GITHUB_ACTIONS_USER_AWS_ACCESS_KEY>
    AWS_SECRET: <GITHUB_ACTIONS_USER_AWS_SECRET>
    AWS_REGION: <EKS_CLUSTER_AWS_REGION>
    CLUSTER_NAME: <CLUSTER_NAME>
    ECR_URL: <ECR_URL>
    REPO_NAME: <REPO_NAME>
    DOCKER_LABEL: <DOCKER_LABEL>
    PRIVATE_ECR: "false"
    STORAGE_PROVIDER: local
    STORAGE_AWS_ACCESS_KEY_ID: <S3_USER_ACCESS_KEY>
    STORAGE_AWS_ACCESS_KEY_SECRET: <S3_USER_SECRET_KEY>
    STORAGE_CLOUDFRONT_DOMAIN: <CLOUDFRONT_DOMAIN>
    STORAGE_CLOUDFRONT_DISTRIBUTION_ID: <CLOUDFRONT_DISTRIBUTION_ID>
    STORAGE_S3_REGION: <S3_REGION>
    STORAGE_S3_STATIC_RESOURCE_BUCKET: <S3_BUCKET_NAME>
    STORAGE_S3_AVATAR_DIRECTORY: avatars
    VITE_APP_HOST: local.etherealengine.org
    VITE_APP_PORT: "3000"
    VITE_SERVER_HOST: api-local.etherealengine.org
    VITE_SERVER_PORT: "3030"
    VITE_FILE_SERVER: https://localhost:8642/etherealengine-microk8s-static-resources
    VITE_INSTANCESERVER_HOST: instanceserver-local.etherealengine.org
    VITE_INSTANCESERVER_PORT: "3031"
    VITE_ROOT_REDIRECT: "false"
    VITE_READY_PLAYER_ME_URL: https://xre.readyplayer.me
    VITE_FEATHERS_STORE_KEY: EtherealEngine-Auth-Store
    VITE_GA_MEASUREMENT_ID: <GOOGLE_ANALYTICS_MEASUREMENT_ID>
    VITE_MAPBOX_API_KEY: <MAPBOX_API_KEY>
    VITE_MEDIATOR_SERVER: https://authn.io
    VITE_ETH_MARKETPLACE: <ETH_MARKETPLACE_ADDRESS>
  image:
    repository: lagunalabs/etherealengine-builder
  service:
    type: NodePort
  replicaCount: 1
    
testbot:
  extraEnv:
    APP_HOST: local.etherealengine.org
  image:
    repository: localhost:32000/etherealengine-testbot
    pullPolicy: IfNotPresent